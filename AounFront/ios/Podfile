# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '16.0'  # Ensure a minimum supported iOS version

prepare_react_native_project!

use_modular_headers!  # Required for Firebase compatibility

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
else
  use_frameworks! :linkage => :static  # Ensure static linkage for compatibility
end

target 'Aoun' do
  config = use_native_modules!

  # âœ… Include necessary Firebase modules with modular headers
  pod 'Firebase/Core', :modular_headers => true
  pod 'Firebase/Auth', :modular_headers => true
  pod 'Firebase/Firestore', :modular_headers => true
  pod 'Firebase/Analytics', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  $RNFirebaseAsStaticFramework = true

  post_install do |installer|
    react_native_post_install(installer, config[:reactNativePath])

    # ðŸ”¥ Fix "Multiple commands produce" issue by ensuring correct settings
    installer.pods_project.targets.each do |target|
      if target.name.include?("ReactCommon") || target.name.include?("React-Fabric")
        target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
